//Q1
#include <stdio.h>

int main()
{
    int m1[3][4],m2[4][2],m3[3][2],i,j,k;
    
    printf("Enter the Elements of First Matrix :----------\n");
    for(i=0;i<3;i++){
        for(j=0;j<4;j++){
            printf("m1[%d][%d] : ",i,j);
            scanf("%d",&m1[i][j]);
        }
    }
    
    printf("Enter the Elements of Second Matrix :---------\n");
    for(i=0;i<4;i++){
        for(j=0;j<2;j++){
            printf("m1[%d][%d] : ",i,j);
            scanf("%d",&m2[i][j]);
        }
    }
    
    //Multiplication Part -------------------
    for(i=0;i<3;i++){
        for(j=0;j<2;j++){
            m3[i][j]=0;
            for(k=0;k<3;k++){
                m3[i][j]+=m1[i][k]*m2[k][j];
            }
        }
    }
    
    printf("The Matrix after multiplication is :-----------\n");
    for(i=0;i<3;i++){
        for(j=0;j<2;j++){
            printf("%d\t",m3[i][j]);
        }
        printf("\n");
    }

    return 0;
}







//Q2
#include <stdio.h>

int main()
{
    int m1[20][20],m2[20][20],m3[20][20],i,j,k,r1,c1,r2,c2;
    
    
    printf("Rows and Colomn of 1st Matrix ---------\n");
    printf("Enter the Row of 1st Matrix : ");
    scanf("%d",&r1);
    printf("Enter the Colomn of 1st Matrix : ");
    scanf("%d",&c1);
    
    printf("Rows and Colomn of 2nd Matrix ---------\n");
    printf("Enter the Row of 2nd Matrix : ");
    scanf("%d",&r2);
    printf("Enter the Colomn of 2nd Matrix : ");
    scanf("%d",&c2);
    
    printf("Enter the Elements of First Matrix :----------\n");
    for(i=0;i<r1;i++){
        for(j=0;j<c1;j++){
            printf("m1[%d][%d] : ",i,j);
            scanf("%d",&m1[i][j]);
        }
    }
    
    printf("Enter the Elements of Second Matrix :---------\n");
    for(i=0;i<r2;i++){
        for(j=0;j<c2;j++){
            printf("m1[%d][%d] : ",i,j);
            scanf("%d",&m2[i][j]);
        }
    }
    
    //Multiplication Part -------------------
    for(i=0;i<r1;i++){
        for(j=0;j<c2;j++){
            m3[i][j]=0;
            for(k=0;k<r1;k++){
                m3[i][j]+=m1[i][k]*m2[k][j];
            }
        }
    }
    
    printf("The Matrix after multiplication is :-----------\n");
    for(i=0;i<3;i++){
        for(j=0;j<2;j++){
            printf("%d\t",m3[i][j]);
        }
        printf("\n");
    }

    return 0;
}








//Q3
#include <stdio.h>

int main()
{
    int m1[20][20],i,j,r,c,k;
    
    
    printf("Rows and Colomn of 1st Matrix ---------\n");
    printf("Enter the Row of 1st Matrix : ");
    scanf("%d",&r);
    printf("Enter the Colomn of 1st Matrix : ");
    scanf("%d",&c);
    
    printf("Enter the Elements of First Matrix :----------\n");
    for(i=0;i<r;i++){
        for(j=0;j<c;j++){
            printf("m1[%d][%d] : ",i,j);
            scanf("%d",&m1[i][j]);
        }
    }
    
    printf("The major diagonal elements are -----------\n");
    for(i=0;i<r;i++){
        for(j=0;j<c;j++){
            if(i==j){
                printf("%d\t",m1[i][j]);    
            }
        }
    }
    
    
    
    return 0;
}








//Q4
#include <stdio.h>

int main()
{
    int m1[20][20],i,j,r,c,k;
    k=0;
    
    printf("Rows and Colomn of 1st Matrix ---------\n");
    printf("Enter the Row of 1st Matrix : ");
    scanf("%d",&r);
    printf("Enter the Colomn of 1st Matrix : ");
    scanf("%d",&c);
    
    printf("Enter the Elements of First Matrix :----------\n");
    for(i=0;i<r;i++){
        for(j=0;j<c;j++){
            printf("m1[%d][%d] : ",i,j);
            scanf("%d",&m1[i][j]);
        }
    }
    
    printf("The minor diagonal elements are -----------\n");
    for(i=0;i<r;i++){
        for(j=0;j<c;j++){
            if(j==(c-i-1)){
                printf("%d\t",m1[i][j]);    
            }
        }
    }
    return 0;
}







//Q5
#include <stdio.h>

int main()
{
    int m1[20][20],i,j,r,c,k;
    
    
    printf("Rows and Colomn of 1st Matrix ---------\n");
    printf("Enter the Row of 1st Matrix : ");
    scanf("%d",&r);
    printf("Enter the Colomn of 1st Matrix : ");
    scanf("%d",&c);
    
    printf("Enter the Elements of First Matrix :----------\n");
    for(i=0;i<r;i++){
        for(j=0;j<c;j++){
            printf("m1[%d][%d] : ",i,j);
            scanf("%d",&m1[i][j]);
        }
    }
    
    printf("The major diagonal elements are -----------\n");
    for(i=0;i<r;i++){
        for(j=0;j<c;j++){
            if(i==j){
                printf("%d\t",m1[i][j]);    
            }
        }
    }
    printf("\n");
    
    
    printf("The minor diagonal elements are -----------\n");
    for(i=0;i<r;i++){
        for(j=0;j<c;j++){
            if(j==(c-i-1)){
                printf("%d\t",m1[i][j]);    
            }
        }
    }
    
    
    
    return 0;
}







//Q6
#include <stdio.h>

int main()
{
    int m1[20][20],i,j,r,c,k;
    
    
    printf("Rows and Colomn of 1st Matrix ---------\n");
    printf("Enter the Row of 1st Matrix : ");
    scanf("%d",&r);
    printf("Enter the Colomn of 1st Matrix : ");
    scanf("%d",&c);
    
    printf("Enter the Elements of First Matrix :----------\n");
    for(i=0;i<r;i++){
        for(j=0;j<c;j++){
            printf("m1[%d][%d] : ",i,j);
            scanf("%d",&m1[i][j]);
        }
    }
    
    printf("The major diagonal triangle elements are -----------\n");
    for(i=1;i<r;i++){
        for(j=0;j<i;j++){
            printf("%d\t",m1[i][j]);    
        }
    }
    
    
    
    return 0;
}








//Q7
#include <stdio.h>

int main()
{
    int m1[20][20],i,j,r,c,k;
    k=0;
    
    printf("Rows and Colomn of 1st Matrix ---------\n");
    printf("Enter the Row of 1st Matrix : ");
    scanf("%d",&r);
    printf("Enter the Colomn of 1st Matrix : ");
    scanf("%d",&c);
    
    printf("Enter the Elements of First Matrix :----------\n");
    for(i=0;i<r;i++){
        for(j=0;j<c;j++){
            printf("m1[%d][%d] : ",i,j);
            scanf("%d",&m1[i][j]);
        }
    }
    
    printf("The minor diagonal elements are -----------\n");
    for(i=1;i<r;i++){
        for(j=c-1;j>0;j--){
            if(j==(c-i-1)){
                break;    
            }
            printf("%d\t",m1[i][j]);
        }
    }
    return 0;
}